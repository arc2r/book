library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# "Swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
# Municipality (Gemeinde) of Richterswil
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
names(richterswil)[5] = "Municipality"
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil,aes(fill = Municipality)) + ggtitle("Swimming spots in the Canton of Zurich")
swimmSpots_richt <- swimmSpots[richterswil, ,op = st_within]
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots_richt, aes(color = "red")) + ggtitle("Swimming spots in the Canton of Zurich")
names(swimmSpots_richt)
swimmSpots_richt
ggplot(swimmSpots_richt) + geom_sf(color = "red")
ggplot(swimmSpots_richt) + geom_sf(aes(color = "red"))
ggplot(swimmSpots_richt) + geom_sf(aes(color = "rsd"))
ggplot(swimmSpots_richt) + geom_sf(aes(color = "Richterswil"))
ggplot(swimmSpots_richt) + geom_sf(aes(fill = "Richterswil"))
ggplot(swimmSpots_richt) + geom_sf(aes(fill = "Richterswil", color = "red"))
ggplot(swimmSpots_richt) + geom_sf(aes(fill = "Richterswil",color = "red"))
ggplot(swimmSpots_richt) + geom_sf(aes(fill = "Richterswil"))
ggplot(swimmSpots_richt) + geom_sf(aes(fill = "Richterswil"))
ggplot(swimmSpots_richt) + geom_sf(fill = "Richterswil")
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots_richt, aes(color = "Swimm spot in Richterswil")) + ggtitle("Swimming spots in the Canton of Zurich")
swimmSpots_richt
gemeinde_ZH
swimmSpots
names(swimmSpots_richt)
swimmSpots_richt
sw <- c("Swimming spot in Richterswil")
cbind(swimmSpots_richt,sw)
swimmSpots_richt
sw <- c("Swimming spot in Richterswil")
swimmSpots_richt <- cbind(swimmSpots_richt,sw)
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots_richt, color = "red") + ggtitle("Swimming spots in the Canton of Zurich") + theme_minimal()
sw <- c("Swimming spot in Richterswil")
swimmSpots_richt <- cbind(swimmSpots_richt,sw)
swimmSpots_richt
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots_richt, color = sw) + ggtitle("Swimming spots in the Canton of Zurich") + theme_minimal()
names(swimmSpots_richt)
drop(swimmSpots_richt,"sw.1")
drop(swimmSpots_richt,sw.1)
swimmSpots_richt[8]
drop(swimmSpots_richt[8])
swimmSpots_richt
knitr::opts_chunk$set(warning = F, message = F, tidy = T)
library(dplyr)
library(sf)
library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# "Swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
# Municipality (Gemeinde) of Richterswil
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
names(richterswil)[5] = "Municipality"
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil,aes(fill = Municipality)) + ggtitle("Swimming spots in the Canton of Zurich") + theme_minimal()
swimmSpots_richt <- swimmSpots[richterswil, ,op = st_within]
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots_richt, color = "red") + ggtitle("Swimming spots in the Canton of Zurich") + theme_minimal()
library(raster)
x <- raster()
x
plot(x)
res(x)
res(x) <- 50
res(x)
plot(x, main="test")
class(x)
plot(x)
x
install.packages("GISTools")
library(GISTools)
data(tornados)
tornados
View(us_states2)
library(tmap)
library(sf)
torn_sf <- st_as_sf(torn)
us_states_sf <- st_as_sf(us_states)
library(tmap)
library(sf)
# convert to sf objects
torn_sf <- st_as_sf(torn)
us_states_sf <- st_as_sf(us_states)
# plot extent and grey background
tm_shape(us_states_sf) + tm_polygons()
# plot extent and grey background
tm_shape(us_states_sf) + tm_polygons("grey90")
# add the torn points
tm_shape(torn_sf) + tm_borders(col = "black") + tm_layout(frame = T)
# add the torn points
tm_shape(torn_sf) + tm_borders(col = "black") + tm_layout(frame = F)
library(tmap)
library(sf)
# convert to sf objects
torn_sf <- st_as_sf(torn)
us_states_sf <- st_as_sf(us_states)
# plot extent and grey background
tm_shape(us_states_sf) + tm_polygons()
# add the torn points
tm_shape(torn_sf) + tm_borders(col = "black") + tm_layout(frame = F)
torn_sf
# add the torn points
tm_shape(torn_sf) + tm_borders(col = "black")
library(tmap)
library(sf)
# convert to sf objects
torn_sf <- st_as_sf(torn)
us_states_sf <- st_as_sf(us_states)
# plot extent and grey background
tm_shape(us_states_sf) + tm_polygons() +
tm_shape(torn_sf) + tm_borders(col = "#FB6A4A", size = 0.04, shape = 1, alpha = 0.5)
library(tmap)
library(sf)
# convert to sf objects
torn_sf <- st_as_sf(torn)
us_states_sf <- st_as_sf(us_states)
# plot extent and grey background
tm_shape(us_states_sf) + tm_polygons() +
tm_shape(torn_sf) + tm_dots(col = "#FB6A4A", size = 0.04, shape = 1, alpha = 0.5)
# plot extent and grey background
tm_shape(us_states_sf) + tm_polygons() +
tm_shape(torn_sf) + tm_dots(col = "#FB6A4A", size = 0.04, shape = 1, alpha = 0.5) +
tm_shape(us_states_sf) + tm_borders(col = "black") + tm_layout(frame = F)
index <- us_states$STATE_NAME == "Texas" | us_states$STATE_NAME == "New Mexico" |
us_states$STATE_NAME == "Oklahoma" | us_states$STATE_NAME == "Arkansas"
index
AoI <- us_states[index,]
AoI_sf <- us_states_sf[index,]
View(AoI_sf)
# plot it
tm_shape(AoI_sf) + tm_borders(col = "black") + tm_layout(frame = F)
# plot it
tm_shape(AoI_sf) + tm_borders(col = "black") + tm_layout(frame = F) +
# add the torn points
tm_shape(torn_sf) + tm_dots(col = "#FB6A4A", size = 0.2, shape = 1, alpha = 0.5)
index <- us_states$STATE_NAME == "Texas" | us_states$STATE_NAME == "New Mexico" |
us_states$STATE_NAME == "Oklahoma" | us_states$STATE_NAME == "Arkansas"
AoI_sf <- us_states_sf[index,]
# plot it
tm_shape(AoI_sf) + tm_borders(col = "black") + tm_layout(frame = F) +
# add the torn points
tm_shape(torn_sf) + tm_dots(col = "#FB6A4A", size = 0.2, shape = 1, alpha = 0.5)
torn_clip_sf <- torn_sf[index,]
tm_shape(AoI_sf) + tm_borders(col = "black") + tm_layout(frame = F) +
# add the torn points
tm_shape(torn_clip_sf) + tm_dots(col = "#FB6A4A", size = 0.2, shape = 1, alpha = 0.5)
AoI_torn_sf <- st_intersection(AoI_sf, torn_sf)
AoI_torn_sf <- st_intersection(AoI_sf, torn_sf)
# plot it
tm_shape(AoI_sf) + tm_borders(col = "black") +
# add the respective torn points
tm_shape(AoI_torn_sf) + tm_dots(col = "#FB6A4A", size = 0.2, shape = 1, alpha = 0.5)
# plot it
tm_shape(AoI_sf) + tm_borders(col = "black") +
# add the respective torn points
tm_shape(AoI_torn_sf) + tm_dots(col = "#FB6A4A", size = 0.2, shape = 1, alpha = 0.5) + tm_layout(frame = F)
mounBikes_routes <- st_read("../sample_data/other/mountainBikes_routes.shp")
View(mounBikes_routes)
mounBikes_routes <- st_read("../sample_data/other/mountainBikes_routes.shp")
mounBikes_routes
getwd()
gemeinde <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# Test
mounBikes_routes <- st_read("sample_data/other/mountainBikes_routes.shp")
gemeinde <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
tm_shape(gemeinde) + tm_borders(col = "black") + tm_layout(frame = F) +
tm_shape(mounBikes_routes) + tm_lines(col = "#FB6A4A", size = 0.04, shape = 1, alpha = 0.5)
# Test
mounBikes_routes <- st_read("sample_data/other/mountainBikes_routes.shp")
gemeinde <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
tm_shape(gemeinde) + tm_borders(col = "black") + tm_layout(frame = F) +
tm_shape(mounBikes_routes) + tm_lines(col = "#FB6A4A",alpha = 0.5)
st_crs(mounBikes_routes)
st_crs(gemeinde)
tm_shape(gemeinde) + tm_borders(col = "black") + tm_layout(frame = F) +
tm_shape(mounBikes_routes) + tm_lines(col = "red",alpha = 0.5)
# Test
bahn_haltestelle_ch <- st_read("../sample_data/other/Haltestelle_Bahn_CH.shp")
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
gemeinde <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
tm_shape(gemeinde) + tm_borders(col = "black") + tm_layout(frame = F) +
tm_shape(bahn_haltestelle_ch) + tm_lines(col = "red",alpha = 0.5)
tm_shape(gemeinde) + tm_borders(col = "black") + tm_layout(frame = F) +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "red",alpha = 0.5)
kantonsgebiet <- st_read("../sample_data/other/Kantonsgebiet.shp")
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F) +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "red",alpha = 0.5)
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F) +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "red",size = 0.2, alpha = 0.5)
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F) +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "red",size = 0.1, alpha = 0.7)
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F) +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "red",size = 0.1, alpha = 0.7) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
# Test
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
tm_shape(us_states_sf) + tm_polygons() +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "red",size = 0.1, alpha = 0.7) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
tm_shape(kantonsgebiet) + tm_polygons() +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "red",size = 0.1, alpha = 0.7) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
tm_shape(kantonsgebiet) + tm_polygons() +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "#c994c7",size = 0.1, alpha = 0.7) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
tm_shape(kantonsgebiet) + tm_polygons() +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.7) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
tm_shape(kantonsgebiet) + tm_polygons("grey90") +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.7) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
tm_shape(kantonsgebiet) + tm_polygons("#f0f0f0") +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.7) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
tm_shape(kantonsgebiet) + tm_polygons("#f0f0f0") +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "#e34a33",size = 0.05, alpha = 0.5) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
tm_shape(kantonsgebiet) + tm_polygons("#f0f0f0") +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.5) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
kantonsgebiet$name
index <- kantonsgebiet$name == "Zürich" |
kantonsgebiet$name == "St. Gallen" |
kantonsgebiet$name == "Thurgau" |
kantonsgebiet$name == "Aargau"
kantons_aOi <- kantonsgebiet[index,]
View(kantons_aOi)
hal_clipped <- st_intersection(kantons_aOi,bahn_haltestelle_ch)
tm_shape(kantons_aOi) + tm_borders() +
tm_shape(hal_clipped) + tm_dots(col = "red", size = 0.1)
### Clip operation
```{r,echo=FALSE}
knitr::opts_chunk$set(warning = F, message = F, tidy = T)
```
```{r}
# Test
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
tm_shape(kantons_aOi) + tm_polygons("#f0f0f0") +
tm_shape(hal_clipped) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.5) +
tm_shape(kantons_aOi) + tm_borders()
tm_shape(kantons_aOi) + tm_polygons("#f0f0f0") +
tm_shape(hal_clipped) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.5) +
tm_shape(kantons_aOi) + tm_borders() + tm_layout(frame = F)
mountainBikes_routes <- st_read("sample_data/other/mountainBikes_routes.shp")
tm_shape(kantonsgebiet) + tm_polygons("#f0f0f0") +
tm_shape(mountainBikes_routes) + tm_lines(col = "#e34a33") +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
canton_valais <- kantonsgebiet$name == "Valais"
# selecting the canton of Valais
canton_valais <- kantonsgebiet$name == "Valais"
tm_shape(canton_valais) + tm_polygons("#f0f0f0") +
tm_shape(mountainBikes_routes) + tm_lines(col = "#e34a33") +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
# selecting the canton of Valais
canton_valais <- kantonsgebiet$name == "Valais"
tm_shape(canton_valais) + tm_polygons("#f0f0f0") +
tm_shape(mountainBikes_routes) + tm_lines(col = "#e34a33") +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
class(canton_valais)
# selecting the canton of Valais
index2 <- kantonsgebiet$name == "Valais"
canton_valais <- kantonsgebiet[index2,]
tm_shape(canton_valais) + tm_polygons("#f0f0f0") +
tm_shape(mountainBikes_routes) + tm_lines(col = "#e34a33") +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
# selecting the canton of Valais
index2 <- kantonsgebiet$name == "Valais"
canton_valais <- kantonsgebiet[index2,]
mountainBikes_routes_valais <- mountainBikes_routes[index2,]
tm_shape(canton_valais) + tm_polygons("#f0f0f0") +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
# selecting the canton of Valais
index2 <- kantonsgebiet$name == "Valais"
canton_valais <- kantonsgebiet[index2,]
mountainBikes_routes_valais <- mountainBikes_routes[index2,]
# selecting the canton of Valais
index2 <- kantonsgebiet$name == "Valais"
canton_valais <- kantonsgebiet[index2,]
mountainBikes_routes_valais <- st_intersection(mountainBikes_routes,canton_valais)
View(mountainBikes_routes_valais)
# selecting the canton of Valais
index2 <- kantonsgebiet$name == "Valais"
canton_valais <- kantonsgebiet[index2,]
mountainBikes_routes_valais <- st_intersection(mountainBikes_routes,canton_valais)
tm_shape(canton_valais) + tm_polygons("#f0f0f0") +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(canton_valais) + tm_polygons("#fff") +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(routes_buffer) + tm_borders(col = "blue")
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(canton_valais) + tm_polygons("#fff") +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(routes_buffer) + tm_lines(col = "blue")
tm_shape(canton_valais) + tm_polygons("#fff") +
tm_shape(routes_buffer) + tm_lines()
class(routes_buffer)
tm_shape(routes_buffer) + tm_polygons()
tm_shape(routes_buffer) + tm_polygons(alpha = 1)
tm_shape(canton_valais) + tm_polygons("fff") +
tm_shape(routes_buffer) + tm_polygons(alpha = 1)
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(routes_buffer) + tm_polygons(alpha = 1)
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(canton_valais) + tm_polygons(col = "fff")
tm_shape(canton_valais) + tm_polygons()
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(canton_valais) + tm_polygons() +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
#tm_shape(routes_buffer) + tm_polygons(alpha = 1)
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(canton_valais) + tm_polygons() +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
#tm_shape(routes_buffer) + tm_polygons(alpha = 1)
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(canton_valais) + tm_polygons() +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(routes_buffer) + tm_polygons(alpha = 1) +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
#tm_shape(routes_buffer) + tm_polygons(alpha = 1)
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(canton_valais) + tm_polygons() +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(routes_buffer) + tm_polygons(col = "blue", alpha = 1) +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
#tm_shape(routes_buffer) + tm_polygons(alpha = 1)
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(canton_valais) + tm_polygons() +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(routes_buffer) + tm_polygons(col = "blue", alpha = 0.5) +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
#tm_shape(routes_buffer) + tm_polygons(alpha = 1)
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(canton_valais) + tm_polygons() +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(routes_buffer) + tm_polygons(col = "blue", alpha = 0.8) +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
#tm_shape(routes_buffer) + tm_polygons(alpha = 1)
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(canton_valais) + tm_polygons() +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(routes_buffer) + tm_polygons(col = "blue", alpha = 0.2) +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
#tm_shape(routes_buffer) + tm_polygons(alpha = 1)
knitr::include_graphics("images/clipOperation.png")
knitr::include_graphics("images/clipOperation.png")
knitr::include_graphics("images/clipOperation.png")
knitr::include_graphics("images/clipOperation.png")
knitr::include_graphics("images/selectAttr.png")
knitr::include_graphics("images/clipOperation.png")
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
library(sf)
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
tm_shape(kantonsgebiet) + tm_polygons("#f0f0f0") +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.5)
library(tmap)
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
tm_shape(kantonsgebiet) + tm_polygons("#f0f0f0") +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.5)
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
tm_shape(kantonsgebiet) + tm_polygons("#f0f0f0") +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.5) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
tmap_mode(mode = c("plot"))
tm_shape(kantonsgebiet) + tm_polygons("#f0f0f0") +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.5) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
knitr::include_graphics("images/buffer.png")
knitr::include_graphics("images/clipOperation.png")
# The area of interest from the previous example
kantons_aOi
library(sf)
library(tmap)
mountainBikes_routes <- st_read("sample_data/other/mountainBikes_routes.shp")
tm_shape(kantonsgebiet) + tm_polygons("#f0f0f0") +
tm_shape(mountainBikes_routes) + tm_lines(col = "#e34a33") +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
index2 <- kantonsgebiet$name == "Valais"
canton_valais <- kantonsgebiet[index2,]
mountainBikes_routes_valais <- st_intersection(mountainBikes_routes,canton_valais)
tm_shape(canton_valais) + tm_polygons("#f0f0f0") +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
routes_buffer <- st_buffer(mountainBikes_routes_valais,1000)
tm_shape(canton_valais) + tm_polygons() +
tm_shape(mountainBikes_routes_valais) + tm_lines(col = "#e34a33") +
tm_shape(routes_buffer) + tm_polygons(col = "blue", alpha = 0.2) +
tm_shape(canton_valais) + tm_borders(col = "black") + tm_layout(frame = F)
knitr::include_graphics("images/buffer.png")
# The area of interest from the previous example
kantons_aOi
tm_shape(kantons_aOi) + tm_polygons("#f0f0f0") +
tm_shape(hal_clipped) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.5) +
tm_shape(kantons_aOi) + tm_borders() + tm_layout(frame = F)
knitr::opts_chunk$set(warning = F, message = F, tidy = T)
# Point dataset depicting the train stations locations across Switzerland
bahn_haltestelle_ch <- st_read("sample_data/other/Haltestelle_Bahn_CH.shp")
# Dataset depictinG Switzerland on canton level
kantonsgebiet <- st_read("sample_data/other/Kantonsgebiet.shp")
tmap_mode(mode = c("plot")) # setting the plotting mode to static -- optimizing the process
tm_shape(kantonsgebiet) + tm_polygons("#f0f0f0") +
tm_shape(bahn_haltestelle_ch) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.5) +
tm_shape(kantonsgebiet) + tm_borders(col = "black") + tm_layout(frame = F)
index <- kantonsgebiet$name == "Zürich" |
kantonsgebiet$name == "St. Gallen" |
kantonsgebiet$name == "Thurgau" |
kantonsgebiet$name == "Aargau"
# Selecting the cantons based on the previously generated index
kantons_aOi <- kantonsgebiet[index,]
# Performing the clipping operation
hal_clipped <- st_intersection(kantons_aOi,bahn_haltestelle_ch)
tm_shape(kantons_aOi) + tm_polygons("#f0f0f0") +
tm_shape(hal_clipped) + tm_dots(col = "#e34a33",size = 0.1, alpha = 0.5) +
tm_shape(kantons_aOi) + tm_borders() + tm_layout(frame = F)
knitr::include_graphics("images/clipOperation.png")
# The area of interest from the previous example
kantons_aOi
# Merging the four areas into one
aOi_merged <- st_union(kantons_aOi)
tm_shape(aOi_merged) + tm_polygons("#f0f0f0")
tm_shape(aOi_merged) + tm_polygons("#f0f0f0") + tm_layout(frame = F)
library(sf)
library(sf)
library(tidyverse)
zweitwohnung <- read_sf("sample_data/other/zweitwohnung_gemeinden.gpkg") %>%
dplyr::filter(kanton == "Valais / Wallis") %>%
select(NAME)
library(sf)
library(tidyverse)
zweitwohnung <- read_sf("sample_data/other/zweitwohnung_gemeinden.gpkg") %>%
dplyr::filter(kanton == "Valais / Wallis") %>%
select(.,NAME)
git status
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("tif")
install.packages("tiff")
library(sf)
library(tidyverse)
eire <- read_sf("sample_data/spData/eire.shp")
getwd()
library(sf)
library(tidyverse)
getwd()
eire <- read_sf("sample_data/spData/eire.shp")
st_crs(eire)
ggplot(eire) +
geom_sf()
eire <- st_set_crs(eire, "+proj=utm +zone=30 +ellps=airy +units=km")
ggplot(eire) +
geom_sf()
ggplot(eire) +
geom_sf(aes(fill = INCOME))
remotes::install_github('rstudio/bookdown')
remote::install_github('rstudio/bookdown')
remotes::install_github('rstudio/bookdown')
Remotes::install_github('rstudio/bookdown')
Remotes::install_github('rstudio/bookdown')
remotes::install_github('rstudio/bookdown')
install.packages("bookdown")
install.packages("bookdown")
install.packages("stringi")
library(stringi)
library(bookdown)
library(stringi )
remotes::install_github('rstudio/bookdown')
library(sf)
library(tidyverse)
getwd()
eire <- read_sf("sample_data/spData/eire.shp")
knitr::opts_knit$set(root.dir = 'C:\Users\bako\Desktop\Projekte\All_thing_R_Spatial\github\spatialR_for_ArcGIS_Users')
knitr::opts_knit$set(root.dir = 'C:\\Users\\bako\\Desktop\\Projekte\\All_thing_R_Spatial\\github\\spatialR_for_ArcGIS_Users')
remotes::install_github('rstudio/bookdown')
install.packages("bookdownv0.18")
install.packages("bookdown_v0.18")
install_version("bookdown, version = "018")
install_version("bookdown, version = 018)
install_version("bookdown", version = 018)
install_version("bookdown", version = "018")
install_version("bookdown", "018")
library(bookdown)
bookdown_site()
?bookdown
remotes::install_github('rstudio/bookdown')
install.packages("rem"os)
install.packages("remotes"
)
remotes::install_github('rstudio/bookdown')
