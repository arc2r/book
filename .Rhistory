# Selecting the cantons based on the previously generated index
kantons_aOi <- kantonsgebiet[index,]
kantons_aOi
kantons_aOi
kantons_aOi <- kantonsgebiet[index,]
index <- kantonsgebiet$name == "Zürich" |
kantonsgebiet$name == "St. Gallen" |
kantonsgebiet$name == "Thurgau" |
kantonsgebiet$name == "Aargau"
index <- kantonsgebiet$name == "Zürich" |
kantonsgebiet$name == "St. Gallen" |
kantonsgebiet$name == "Thurgau" |
kantonsgebiet$name == "Aargau"
index
kantons_aOi <- kantonsgebiet[index,]
kantons_aOi
# Performing the clipping operation
hal_clipped <- st_intersection(kantons_aOi,bahn_haltestelle_ch)
View(hal_clipped)
gIntersection()
install.packages("rgeos")
gIntersection()
library(rgeos)
class(kantonsgebiet)
# retrieving the coordinate of the imported layers
st_crs(kantone)
# Importing the datasets
library(sf)
kantone <- read_sf("sample_data/other/kantone.gpkg")
bezirke <- read_sf("sample_data/other/bezirke.gpkg")
# Visualising the data - Cantons
library(ggplot2)
ggplot() + geom_sf(data = kantone)
# Visualising the data - Bezirke
library(ggplot2)
ggplot() + geom_sf(data = bezirke)
# retrieving the coordinate of the imported layers
st_crs(kantone)
st_crs(bezirke)
# retrieving the coordinate of the imported layer
st_crs(bezirke)
st_set_crs(bezirke,4326)
# retrieving the coordinate of the imported layer
st_crs(bezirke)
st_transform(bezirke,4326)
st_set_crs(bezirke, 2056)
# retrieving the coordinate of the imported layer
st_crs(bezirke)
b <- st_set_crs(bezirke, 4326)
st_crs(b)
bezirke <- st_set_crs(bezirke, 4326)
# Assigning the World Geodetic System (WGS84) as a coordinate system to our dataset
bezirke <- st_set_crs(bezirke, 4326)
DTM_HARV <- raster("data/NEON-DS-Airborne-Remote-Sensing/HARV/DTM/HARV_dtmCrop.tif")
library(raster)
DTM_HARV <- raster("data/NEON-DS-Airborne-Remote-Sensing/HARV/DTM/HARV_dtmCrop.tif")
library(sf)
bezirke <- read_sf("sample_data/other/bezirke.gpkg")
library(ggplot2)
ggplot() + geom_sf(data = bezirke)
# retrieving the coordinate of the imported layer
st_crs(bezirke)
st_set_crs(bezirke,4326)
t <- st_set_crs(bezirke,4326)
t<-st_transform(t,2056)
tt <- st_transform(bezirke,2056)
# read Basis Karte in Zürich
library(raster)
library(rgdal)
# read Basis Karte in Zürich
library(raster)
library(rgdal)
karteZH <- raster("sample_data/Kanton_Zuerich/basiskarte_zuerich_50000.tif")
karteZH
plot(karteZH)
# read Basiskarte in Zürich
library(raster)
library(rgdal)
karteZH <- raster("sample_data/Kanton_Zuerich/basiskarte_zuerich_50000.tif", main = "True color")
plot(karteZH)
# read Basiskarte in Zürich
library(raster)
library(rgdal)
karteZH <- raster("sample_data/Kanton_Zuerich/basiskarte_zuerich_50000.tif", rgb=c(3,2,1), main = "True color")
plot(karteZH)
karteZH <- raster("sample_data/Kanton_Zuerich/basiskarte_zuerich_50000.tif", rgb=c(3,2,1), main = "True color")
plot(karteZH)
karteZH <- raster("sample_data/Kanton_Zuerich/basiskarte_zuerich_50000.tif", rgb=c(3,2,1))
plot(karteZH)
karteZH <- raster("sample_data/Kanton_Zuerich/basiskarte_zuerich_50000.tif"
karteZH <- raster("sample_data/Kanton_Zuerich/basiskarte_zuerich_50000.tif")
karteZH <- raster("sample_data/Kanton_Zuerich/basiskarte_zuerich_50000.tif")
plot(karteZH)
# read Basiskarte in Zürich
library(raster)
library(rgdal)
karteZH <- raster("sample_data/natMap_relief.tif")
# read Basiskarte in Zürich
library(raster)
library(rgdal)
karteZH <- raster("sample_data/Kanton_Zuerich/natMap_relief.tif")
plot(karteZH)
install.packages("terra")
library(terra)
xx <- rast("sample_data/Kanton_Zuerich/natMap_relief.tif")
plot(xx)
img_stack=stack(karteZH)
# Read raster dataset
library(raster)
library(rgdal)
karteZH <- raster("sample_data/Kanton_Zuerich/natMap_relief.tif")
plot(karteZH)
img_stack=stack(karteZH)
#then plot it an RGB raster
plotRGB(img_stack)
class(karteZH)
karteZH_df <- as.data.frame(karteZH, xy = TRUE)
ggplot() +
geom_raster(data = karteZH_df ,
aes(x = x, y = y))
library(ggplot2)
ggplot() +
geom_raster(data = karteZH_df ,
aes(x = x, y = y))
View(karteZH_df)
ggplot() +
geom_raster(data = karteZH_df ,
aes(x = x, y = y,
fill = natMap_relief))
karteZH <- raster("sample_data/Kanton_Zuerich/natMap_relief.tif")
karteZH
crs(karteZH)
crs(karteZH, asText = TRUE)
projection(karteZH, asText=TRUE)
crs(karteZH)
# Importing the dataset
library(sf)
bezirke <- read_sf("sample_data/other/bezirke.gpkg")
# Visualising the imported dataset
library(ggplot2)
ggplot() + geom_sf(data = bezirke)
# retrieving the coordinate of the imported layer
st_crs(bezirke)
# Assigning the World Geodetic System (WGS84) as a coordinate system to our dataset
bezirke <- st_set_crs(bezirke, 4326)
st_crs(bezirke)
bezirke_swiss <- st_transform(bezirke, 2056)
# retrieve the coordinate system
st_crs(bezirke_swiss)
# Read raster dataset
library(raster)
library(rgdal)
karteZH <- raster("sample_data/Kanton_Zuerich/natMap_relief.tif")
karteZH_df <- as.data.frame(karteZH, xy = TRUE)
ggplot() +
geom_raster(data = karteZH_df ,
aes(x = x, y = y,
fill = natMap_relief))
class(raster())
class(karteZH_df)
ggplot() +
geom_raster(data = karteZH)
library(stars)
ggplot() + geom_stars(data = st_as_stars(karteZH))
library(raster)
library(stars)
karteZH <- raster("sample_data/Kanton_Zuerich/natMap_relief.tif")
karteZH_df <- as.data.frame(karteZH, xy = TRUE)
ggplot() +
geom_raster(data = karteZH ,
aes(x = x, y = y,
fill = natMap_relief))
# Read raster dataset
library(raster)
library(stars)
karteZH <- raster("sample_data/Kanton_Zuerich/natMap_relief.tif")
karteZH_df <- as.data.frame(karteZH, xy = TRUE)
ggplot() +
geom_raster(data = karteZH_df ,
aes(x = x, y = y,
fill = natMap_relief))
ggplot() +
geom_raster(data = karteZH_df ,
aes(x = x, y = y))
head(karteZH_df)
ggplot() +
geom_raster(data = karteZH_df ,
aes(x = x, y = y), fill = natMap_relief)
ggplot() +
geom_raster(data = karteZH_df ,
aes(x = x, y = y), fill = natMap_relief)
ggplot() +
geom_raster(data = karteZH_df ,
aes(x = x, y = y), fill = karteZH_df$natMap_relief)
# Read raster dataset
library(raster)
library(stars)
karteZH <- raster("sample_data/Kanton_Zuerich/natMap_relief.tif")
karteZH_df <- as.data.frame(karteZH, xy = TRUE)
plotRGB(karteZH)
plotRGB(karteZH_df)
# Read raster dataset
library(raster)
library(stars)
karteZH <- raster("sample_data/Kanton_Zuerich/natMap_relief.tif")
karteZH_df <- as.data.frame(karteZH, xy = TRUE)
st_crs(karteZH_df)
projectRaster(karteZH_df,2056)
klimaZH <- raster("sample_data/Klimamodell_ZH/LH_KLIMA_PET_14H.tif")
library(raster)
library(stars)
klimaZH <- raster("sample_data/Klimamodell_ZH/LH_KLIMA_PET_14H.tif")
klimaZH_df <- as.data.frame(klimaZH, xy = TRUE)
klimaZH_df
ggplot() +
geom_raster(data = klimaZH_df ,
aes(x = x, y = y,
fill = LH_KLIMA_PET_14H))
library(ggplot2)
ggplot() +
geom_raster(data = klimaZH_df ,
aes(x = x, y = y,
fill = LH_KLIMA_PET_14H))
ggplot() +
geom_raster(data = klimaZH_df ,
aes(x = x, y = y,
fill = LH_KLIMA_PET_14H)) + coord_quickmap()
library(sf)
# Read raster dataset
library(raster)
library(stars)
library(sf)
disposalPoints <- read_sf("sample_data/Entsorgung_Waedenswil/abfallentsorgung_waedenswil.gpkg")
View(disposalPoints)
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
ggplot() +
geom_sf(data = disposalPoints) + geom_raster(data = recycle_Waedi)
ggplot() +
geom_sf(data = disposalPoints) + geom_raster(data = as.data.frame(recycle_Waedi))
coordinates(disposalPoints)
st_coordinates(disposalPoints)
library(dplyr)
disposalPoints %>%
mutate(
X = st_coordinates(.)[1],
Y = st_coordinates(.)[2]
)
View(disposalPoints)
library(raster)
library(stars)
library(sf)
library(dplyr)
disposalPoints <- read_sf("sample_data/Entsorgung_Waedenswil/abfallentsorgung_waedenswil.gpkg")
disposalPoints <- disposalPoints %>%
mutate(
X = st_coordinates(.)[1],
Y = st_coordinates(.)[2]
)
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
View(disposalPoints)
ggplot() + geom_sf(data = disposalPoints)
ggplot() + geom_sf(data = disposalPoints) + coord_sf(datum = 2056)
# Convert the raster dataset to a datafram
recycle_Waedi_df <- as.data.frame(recycle_Waedi)
View(recycle_Waedi_df)
ggplot() + geom_raster(recycle_Waedi_df, aes(fill = abfall_raster))
class(recycle_Waedi)
plot(recycle_Waedi)
ggplot() + geom_sf(recycle_Waedi)
ggplot(recycle_Waedi) + geom_raster()
View(recycle_Waedi)
library(stars)
ggplot() + geom_stars(data = st_as_stars(recycle_Waedi))
ggplot() + geom_stars(data = st_as_stars(recycle_Waedi)) + scale_fill_viridis(na.value="white")
# Convert the raster dataset to a stars object in order to plot it with ggplot
recycle_Waedi <- st_as_stars(recycle_Waedi)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red")
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#0000FFFF","#FFFFFFFF","#FF0000FF"))
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#0000FFFF","#FFFFFFFF","#FF0000FF")) +
theme_classic()
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#0000FFFF","#FFFFFFFF","#FF0000FF")) +
theme_dark()
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#0000FFFF","#FFFFFFFF","#FF0000FF"))
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#1bc906","#ef7070","#f30202"))
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "yellow") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#1bc906","#ef7070","#f30202"))
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "blue") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#1bc906","#ef7070","#f30202"))
View(disposalPoints)
View(recycle_Waedi)
View(recycle_Waedi_df)
recycle_Waedi_wgs84 <- projectRaster(recycle_Waedi,4326)
recycle_Waedi_wgs84 <- projectRaster(recycle_Waedi,crs = 4326)
crs(recycle_Waedi)
recycle_Waedi
recycle_Waedi
st_set_crs(recycle_Waedi,2056)
crs(recycle_Waedi)
st_crs(recycle_Waedi)
st_transform(recycle_Waedi,2056)
st_crs(recycle_Waedi)
library(raster)
library(stars)
library(sf)
library(dplyr)
library(stars)
# Insert all the locations for recycling in the city of Wädenswil
disposalPoints <- read_sf("sample_data/Entsorgung_Waedenswil/abfallentsorgung_waedenswil.gpkg")
disposalPoints <- disposalPoints %>%
mutate(
X = st_coordinates(.)[1],
Y = st_coordinates(.)[2]
)
# Read the raster dataset
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
crs(recycle_Waedi)
projectRaster(recycle_Waedi,crs = 2056)
projectRaster(recycle_Waedi,crs = "2056")
crs(recycle_Waedi)
# Insert a vector dataset that depicts the public transport connection quality in
# the city of Wädenswil
ARE_waedi <- read_sf("sample_data/Entsorgung_Waedenswil/ARE_waedenswil.shp")
# Read the raster dataset
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
# Convert the raster dataset to a stars object in order to plot it with ggplot
recycle_Waedi <- st_as_stars(recycle_Waedi)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = ARE_waedi, color = "blue") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#1bc906","#ef7070","#f30202"))
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = ARE_waedi, color = "blue") +
coord_sf(datum = 2056)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = ARE_waedi) +
coord_sf(datum = 2056)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = ARE_waedi, color = "grey") +
coord_sf(datum = 2056)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = ARE_waedi, color = "grey", alpha = 0.5) +
coord_sf(datum = 2056)
# crop the
test <- crop(recycle_Waedi, ARE_waedi)
# crop the
test <- crop(st_rasterize(recycle_Waedi), ARE_waedi)
library(raster)
library(stars)
library(sf)
library(dplyr)
library(stars)
# Insert a vector dataset that depicts the public transport connection quality in
# the city of Wädenswil
ARE_waedi <- read_sf("sample_data/Entsorgung_Waedenswil/ARE_waedenswil.shp")
# Read the raster dataset
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
# crop the
test <- crop(recycle_Waedi, ARE_waedi)
plot(test)
library(raster)
library(stars)
library(sf)
library(dplyr)
library(stars)
# Insert a vector dataset that depicts the public transport connection quality in
# the city of Wädenswil
ARE_waedi <- read_sf("sample_data/Entsorgung_Waedenswil/ARE_waedenswil.shp")
# Read the raster dataset
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
# crop the
test <- crop(recycle_Waedi, ARE_waedi)
View(recycle_Waedi)
View(test)
View(recycle_Waedi)
View(test)
View(recycle_Waedi)
View(test)
testStar <- st_as_stars(test)
ggplot() + geom_stars(data = test)
ggplot() + geom_stars(data = testStar)
# crop the
rr <- mask(recycle_Waedi,ARE_waedi)
plot(rr)
plot(recycle_Waedi)
plot(ARE_waedi)
plot(ARE_waedi$KLASSE)
plot(ARE_waedi)
ggplot() + geom_sf(data = ARE_waedi)
as.data.frame(recycle_Waedi)
as.data.frame(values = recycle_Waedi)
as.data.frame("values" = recycle_Waedi)
plot(ARE_waedi)
plot(ARE_waedi$KLASSE)
plot(ARE_waedi$geometry)
plot(ARE_waedi$geometry, color = "red")
ggplot(data = recycle_Waedi) + geom_raster()
ggplot(data = ggGS(recycle_Waedi)) + geom_raster()
INSTA
install.packages("grainscape")
library(grainscape)
ggplot(data = ggGS(recycle_Waedi)) + geom_raster()
plot(ARE_waedi)
par(new=TRUE)
plot(recycle_Waedi)
plot(recycle_Waedi)
plot(ARE_waedi)
plot(recycle_Waedi)
par(new=TRUE)
plot(ARE_waedi)
plot(recycle_Waedi)
plot(ARE_waedi)
plot(recycle_Waedi)
plot(recycle_Waedi)
plot(recycle_Waedi)
plot(ARE_waedi, add = TRUE)
plot(recycle_Waedi)
plot(ARE_waedi, add = TRUE)
# Read raster dataset
library(raster)
library(stars)
library(sf)
library(dplyr)
library(stars)
# Insert a vector dataset that depicts the public transport connection quality in
# the city of Wädenswil and plot it
ARE_waedi <- read_sf("sample_data/Entsorgung_Waedenswil/ARE_waedenswil.shp")
# Read the raster dataset and plot it
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
plot(recycle_Waedi)
plot(ARE_waedi, add = TRUE)
# crop the
recycle_Waedi_clip <- mask(recycle_Waedi,ARE_waedi)
# Read raster dataset
library(raster)
library(stars)
library(sf)
library(dplyr)
library(stars)
# Insert a vector dataset that depicts the public transport connection quality in
# the city of Wädenswil and plot it
ARE_waedi <- read_sf("sample_data/Entsorgung_Waedenswil/ARE_waedenswil.shp")
# Read the raster dataset and plot it
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
plot(recycle_Waedi)
plot(ARE_waedi, add = TRUE)
# crop the
recycle_Waedi_clip <- mask(recycle_Waedi,ARE_waedi)
plot(recycle_Waedi_clip)
ggplot() + geom_stars(data = st_as_stars(recycle_Waedi_clip))
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_gradientn(colours=c("red","green","yellow"))
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_gradientn(colours=c("green","yellow","red"))
plot(recycle_Waedi)
plot(ARE_waedi, add = TRUE)
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_gradientn(colours=c("red","yellow","green"))
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_color_viridis_c()
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_color_viridis_b()
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_viridis_d()
scale_fill_gradientn(colours=c("green","yellow","red"))
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_gradientn(colours=c("green","yellow","red"))
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_gradientn(colours=c("green","yellow","red"))
plot(recycle_Waedi)
plot(ARE_waedi, alpha = 0.5, add = TRUE)
plot(recycle_Waedi)
plot(ARE_waedi, alpha = 1, add = TRUE)
plot(ARE_waedi, alpha = 0.5, add = TRUE)
plot(ARE_waedi, alpha = 0.5, add = TRUE)
plot(ARE_waedi, alpha = 0.5, add = TRUE)
plot(recycle_Waedi)
plot(ARE_waedi, alpha = 0.5, add = TRUE)
# ggplot() +
#   geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
#   scale_fill_gradientn(colours=c("green","yellow","red"))
plot(recycle_Waedi_clip)
