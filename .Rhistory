ggplot() +
geom_raster(data = karteZH_df ,
aes(x = x, y = y), fill = natMap_relief)
ggplot() +
geom_raster(data = karteZH_df ,
aes(x = x, y = y), fill = karteZH_df$natMap_relief)
# Read raster dataset
library(raster)
library(stars)
karteZH <- raster("sample_data/Kanton_Zuerich/natMap_relief.tif")
karteZH_df <- as.data.frame(karteZH, xy = TRUE)
plotRGB(karteZH)
plotRGB(karteZH_df)
# Read raster dataset
library(raster)
library(stars)
karteZH <- raster("sample_data/Kanton_Zuerich/natMap_relief.tif")
karteZH_df <- as.data.frame(karteZH, xy = TRUE)
st_crs(karteZH_df)
projectRaster(karteZH_df,2056)
klimaZH <- raster("sample_data/Klimamodell_ZH/LH_KLIMA_PET_14H.tif")
library(raster)
library(stars)
klimaZH <- raster("sample_data/Klimamodell_ZH/LH_KLIMA_PET_14H.tif")
klimaZH_df <- as.data.frame(klimaZH, xy = TRUE)
klimaZH_df
ggplot() +
geom_raster(data = klimaZH_df ,
aes(x = x, y = y,
fill = LH_KLIMA_PET_14H))
library(ggplot2)
ggplot() +
geom_raster(data = klimaZH_df ,
aes(x = x, y = y,
fill = LH_KLIMA_PET_14H))
ggplot() +
geom_raster(data = klimaZH_df ,
aes(x = x, y = y,
fill = LH_KLIMA_PET_14H)) + coord_quickmap()
library(sf)
# Read raster dataset
library(raster)
library(stars)
library(sf)
disposalPoints <- read_sf("sample_data/Entsorgung_Waedenswil/abfallentsorgung_waedenswil.gpkg")
View(disposalPoints)
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
ggplot() +
geom_sf(data = disposalPoints) + geom_raster(data = recycle_Waedi)
ggplot() +
geom_sf(data = disposalPoints) + geom_raster(data = as.data.frame(recycle_Waedi))
coordinates(disposalPoints)
st_coordinates(disposalPoints)
library(dplyr)
disposalPoints %>%
mutate(
X = st_coordinates(.)[1],
Y = st_coordinates(.)[2]
)
View(disposalPoints)
library(raster)
library(stars)
library(sf)
library(dplyr)
disposalPoints <- read_sf("sample_data/Entsorgung_Waedenswil/abfallentsorgung_waedenswil.gpkg")
disposalPoints <- disposalPoints %>%
mutate(
X = st_coordinates(.)[1],
Y = st_coordinates(.)[2]
)
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
View(disposalPoints)
ggplot() + geom_sf(data = disposalPoints)
ggplot() + geom_sf(data = disposalPoints) + coord_sf(datum = 2056)
# Convert the raster dataset to a datafram
recycle_Waedi_df <- as.data.frame(recycle_Waedi)
View(recycle_Waedi_df)
ggplot() + geom_raster(recycle_Waedi_df, aes(fill = abfall_raster))
class(recycle_Waedi)
plot(recycle_Waedi)
ggplot() + geom_sf(recycle_Waedi)
ggplot(recycle_Waedi) + geom_raster()
View(recycle_Waedi)
library(stars)
ggplot() + geom_stars(data = st_as_stars(recycle_Waedi))
ggplot() + geom_stars(data = st_as_stars(recycle_Waedi)) + scale_fill_viridis(na.value="white")
# Convert the raster dataset to a stars object in order to plot it with ggplot
recycle_Waedi <- st_as_stars(recycle_Waedi)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red")
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#0000FFFF","#FFFFFFFF","#FF0000FF"))
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#0000FFFF","#FFFFFFFF","#FF0000FF")) +
theme_classic()
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#0000FFFF","#FFFFFFFF","#FF0000FF")) +
theme_dark()
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#0000FFFF","#FFFFFFFF","#FF0000FF"))
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "red") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#1bc906","#ef7070","#f30202"))
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "yellow") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#1bc906","#ef7070","#f30202"))
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = disposalPoints, color = "blue") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#1bc906","#ef7070","#f30202"))
View(disposalPoints)
View(recycle_Waedi)
View(recycle_Waedi_df)
recycle_Waedi_wgs84 <- projectRaster(recycle_Waedi,4326)
recycle_Waedi_wgs84 <- projectRaster(recycle_Waedi,crs = 4326)
crs(recycle_Waedi)
recycle_Waedi
recycle_Waedi
st_set_crs(recycle_Waedi,2056)
crs(recycle_Waedi)
st_crs(recycle_Waedi)
st_transform(recycle_Waedi,2056)
st_crs(recycle_Waedi)
library(raster)
library(stars)
library(sf)
library(dplyr)
library(stars)
# Insert all the locations for recycling in the city of Wädenswil
disposalPoints <- read_sf("sample_data/Entsorgung_Waedenswil/abfallentsorgung_waedenswil.gpkg")
disposalPoints <- disposalPoints %>%
mutate(
X = st_coordinates(.)[1],
Y = st_coordinates(.)[2]
)
# Read the raster dataset
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
crs(recycle_Waedi)
projectRaster(recycle_Waedi,crs = 2056)
projectRaster(recycle_Waedi,crs = "2056")
crs(recycle_Waedi)
# Insert a vector dataset that depicts the public transport connection quality in
# the city of Wädenswil
ARE_waedi <- read_sf("sample_data/Entsorgung_Waedenswil/ARE_waedenswil.shp")
# Read the raster dataset
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
# Convert the raster dataset to a stars object in order to plot it with ggplot
recycle_Waedi <- st_as_stars(recycle_Waedi)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = ARE_waedi, color = "blue") +
coord_sf(datum = 2056) +
scale_fill_gradientn(colours=c("#1bc906","#ef7070","#f30202"))
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = ARE_waedi, color = "blue") +
coord_sf(datum = 2056)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = ARE_waedi) +
coord_sf(datum = 2056)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = ARE_waedi, color = "grey") +
coord_sf(datum = 2056)
ggplot() + geom_stars(data = recycle_Waedi) +
geom_sf(data = ARE_waedi, color = "grey", alpha = 0.5) +
coord_sf(datum = 2056)
# crop the
test <- crop(recycle_Waedi, ARE_waedi)
# crop the
test <- crop(st_rasterize(recycle_Waedi), ARE_waedi)
library(raster)
library(stars)
library(sf)
library(dplyr)
library(stars)
# Insert a vector dataset that depicts the public transport connection quality in
# the city of Wädenswil
ARE_waedi <- read_sf("sample_data/Entsorgung_Waedenswil/ARE_waedenswil.shp")
# Read the raster dataset
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
# crop the
test <- crop(recycle_Waedi, ARE_waedi)
plot(test)
library(raster)
library(stars)
library(sf)
library(dplyr)
library(stars)
# Insert a vector dataset that depicts the public transport connection quality in
# the city of Wädenswil
ARE_waedi <- read_sf("sample_data/Entsorgung_Waedenswil/ARE_waedenswil.shp")
# Read the raster dataset
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
# crop the
test <- crop(recycle_Waedi, ARE_waedi)
View(recycle_Waedi)
View(test)
View(recycle_Waedi)
View(test)
View(recycle_Waedi)
View(test)
testStar <- st_as_stars(test)
ggplot() + geom_stars(data = test)
ggplot() + geom_stars(data = testStar)
# crop the
rr <- mask(recycle_Waedi,ARE_waedi)
plot(rr)
plot(recycle_Waedi)
plot(ARE_waedi)
plot(ARE_waedi$KLASSE)
plot(ARE_waedi)
ggplot() + geom_sf(data = ARE_waedi)
as.data.frame(recycle_Waedi)
as.data.frame(values = recycle_Waedi)
as.data.frame("values" = recycle_Waedi)
plot(ARE_waedi)
plot(ARE_waedi$KLASSE)
plot(ARE_waedi$geometry)
plot(ARE_waedi$geometry, color = "red")
ggplot(data = recycle_Waedi) + geom_raster()
ggplot(data = ggGS(recycle_Waedi)) + geom_raster()
INSTA
install.packages("grainscape")
library(grainscape)
ggplot(data = ggGS(recycle_Waedi)) + geom_raster()
plot(ARE_waedi)
par(new=TRUE)
plot(recycle_Waedi)
plot(recycle_Waedi)
plot(ARE_waedi)
plot(recycle_Waedi)
par(new=TRUE)
plot(ARE_waedi)
plot(recycle_Waedi)
plot(ARE_waedi)
plot(recycle_Waedi)
plot(recycle_Waedi)
plot(recycle_Waedi)
plot(ARE_waedi, add = TRUE)
plot(recycle_Waedi)
plot(ARE_waedi, add = TRUE)
# Read raster dataset
library(raster)
library(stars)
library(sf)
library(dplyr)
library(stars)
# Insert a vector dataset that depicts the public transport connection quality in
# the city of Wädenswil and plot it
ARE_waedi <- read_sf("sample_data/Entsorgung_Waedenswil/ARE_waedenswil.shp")
# Read the raster dataset and plot it
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
plot(recycle_Waedi)
plot(ARE_waedi, add = TRUE)
# crop the
recycle_Waedi_clip <- mask(recycle_Waedi,ARE_waedi)
# Read raster dataset
library(raster)
library(stars)
library(sf)
library(dplyr)
library(stars)
# Insert a vector dataset that depicts the public transport connection quality in
# the city of Wädenswil and plot it
ARE_waedi <- read_sf("sample_data/Entsorgung_Waedenswil/ARE_waedenswil.shp")
# Read the raster dataset and plot it
recycle_Waedi <- raster("sample_data/Entsorgung_Waedenswil/abfall_raster.tif")
plot(recycle_Waedi)
plot(ARE_waedi, add = TRUE)
# crop the
recycle_Waedi_clip <- mask(recycle_Waedi,ARE_waedi)
plot(recycle_Waedi_clip)
ggplot() + geom_stars(data = st_as_stars(recycle_Waedi_clip))
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_gradientn(colours=c("red","green","yellow"))
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_gradientn(colours=c("green","yellow","red"))
plot(recycle_Waedi)
plot(ARE_waedi, add = TRUE)
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_gradientn(colours=c("red","yellow","green"))
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_color_viridis_c()
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_color_viridis_b()
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_viridis_d()
scale_fill_gradientn(colours=c("green","yellow","red"))
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_gradientn(colours=c("green","yellow","red"))
ggplot() +
geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
scale_fill_gradientn(colours=c("green","yellow","red"))
plot(recycle_Waedi)
plot(ARE_waedi, alpha = 0.5, add = TRUE)
plot(recycle_Waedi)
plot(ARE_waedi, alpha = 1, add = TRUE)
plot(ARE_waedi, alpha = 0.5, add = TRUE)
plot(ARE_waedi, alpha = 0.5, add = TRUE)
plot(ARE_waedi, alpha = 0.5, add = TRUE)
plot(recycle_Waedi)
plot(ARE_waedi, alpha = 0.5, add = TRUE)
# ggplot() +
#   geom_stars(data = st_as_stars(recycle_Waedi_clip)) +
#   scale_fill_gradientn(colours=c("green","yellow","red"))
plot(recycle_Waedi_clip)
list.files(pattern = ".Rmd")
list.files(pattern = ".Rmd",recursive = TRUE)
list.files(pattern = ".Rmd",recursive = TRUE,full.names = TRUE)
fi <- list.files(pattern = ".Rmd",recursive = TRUE,full.names = TRUE)
readLines(fi[1])
mylines <- readLines(fi[1])
library(tidyverse)
str_detect(mylines,"^#\\s")
my_h1 <- str_detect(mylines,"^#\\s")
mylines[my_h1]
mylines <- readLines(fi[2])
my_h1 <- str_detect(mylines,"^#\\s")
mylines[my_h1]
mylines <- readLines(fi[3])
my_h1 <- str_detect(mylines,"^#\\s")
mylines[my_h1]
mylines
my_h1
cumsum(!my_h1)
cumsum(my_h1)
mylines <- readLines(fi[2])
my_h1 <- str_detect(mylines,"^#\\s")
mylines[my_h1]
cumsum(my_h1)
myfile <- fi[2]
mylines <- readLines(myfile)
my_h1 <- str_detect(mylines,"^#\\s")
mylines[my_h1]
cumsum(my_h1)
mylines
my_h1 <- str_detect(mylines,"^#\\s")
tibble(h1 = my_h1)
tibble(h1 = my_h1) %>%
mutate(group = cumsum(my_h1))
mylines
tibble(h1 = my_h1)
tibble(h1 = my_h1) %>%
mutate(group = cumsum(my_h1),
h1 = ifelse(h1,mylines,NA)
)
tibble(h1 = my_h1) %>%
mutate(group = cumsum(my_h1),
h1 = ifelse(h1,mylines,NA)
) %>%
fill(h1)
tibble(h1 = my_h1) %>%
mutate(group = cumsum(my_h1),
h1 = ifelse(h1,mylines,NA)
) %>%
fill(h1) %>%
group_by(h1) %>%
count()
myfun <- function(myfile){
mylines <- readLines(myfile)
my_h1 <- str_detect(mylines,"^#\\s")
tibble(h1 = my_h1) %>%
mutate(group = cumsum(my_h1),
h1 = ifelse(h1,mylines,NA)
) %>%
fill(h1) %>%
group_by(h1) %>%
count() %>%
ungroup()
}
myfun(fi[2])
myfun(fi[1])
tibble(h1 = my_h1) %>%
mutate(group = cumsum(my_h1),
h1 = ifelse(h1,mylines,NA)
) %>%
fill(h1) %>%
group_by(h1) %>%
count(name = n_lines) %>%
ungroup()
tibble(h1 = my_h1) %>%
mutate(group = cumsum(my_h1),
h1 = ifelse(h1,mylines,NA)
) %>%
fill(h1) %>%
group_by(h1) %>%
count(name = "n_lines") %>%
ungroup()
map_dfr(fi, ~myfun(.x))
map_dfr(fi, ~myfun(.x))
map_dfr(fi, ~myfun(.x)) %>% View()
fi
map_dfr(fi, ~myfun(.x) %>% mutate(file = basename(.x))) %>% View()
map_dfr(fi, ~myfun(.x) %>% mutate(file = (.x))) %>% View()
myfun
myfile
mylines <- readLines(myfile)
mylines
chuncs <- str_detect(mylines, "^```")
chuncs
cumsum(chuncs)
chuncs
cumsum(chuncs)
install.packages("rmarkdown")
install.packages("remotes")
renv::settings$snapshot.type("explicit")
renv::snapshot()
renv::snapshot()
renv::snapshot()
renv::dependencies()
renv::snapshot()
renv::restore()
renv::snapshot()
renv::dependencies()
renv::init()
renv::status()
db <- available.packages()
db
now <- system.time()
now
now <- Sys.time()
tz <- Sys.timezone()
now
bookdown::serve_book("index.Rmd")
bookdown::serve_book("index.Rmd")
bookdown::preview_chapter("index.Rmd")
bookdown::preview_chapter("index.Rmd")
bookdown::preview_chapter("index.Rmd")
bookdown::preview_chapter("01_Making_Maps/Making_Maps.Rmd")
list.files("01_Making_Maps")
list.files("01_Making_Maps", ".Rmd")
list.files("01_Making_Maps", ".Rmd") %>%
map(function(x){
read_file(x)
})
list.files("01_Making_Maps", ".Rmd",full.names = ) %>%
map(function(x){
read_file(x)
})
list.files("01_Making_Maps", ".Rmd",full.names = TRUE) %>%
map(function(x){
read_file(x)
})
list.files("01_Making_Maps", ".Rmd",full.names = TRUE) %>%
map(function(x){
fi <- read_file(x)
str_detect(fi, "$##")
})
second <- str_starts(fi, "##")
list.files("01_Making_Maps", ".Rmd",full.names = TRUE) %>%
map(function(x){
fi <- read_file(x)
second <- str_starts(fi, "##")
})
list.files("01_Making_Maps", ".Rmd",full.names = TRUE) %>%
map(function(x){
fi <- read_file(x)
second <- str_starts(fi, "##")
fi[second]
})
list.files("01_Making_Maps", ".Rmd",full.names = TRUE) %>%
head(1)
list.files("01_Making_Maps", ".Rmd",full.names = TRUE) %>%
head(1) -> x
fi <- read_file(x)
fi
fi <- readLines(x)
fi
str_starts(fi, "##")
str_starts(fi, "##")
second <- str_starts(fi, "##")
fi[second]
second <- str_starts(fi, "##\\s")
fi[second]
map(function(x){
fi <- readLines(x)
second <- str_starts(fi, "##\\s")
fi[second]
})
list.files("01_Making_Maps", ".Rmd",full.names = TRUE) %>%
# head(1) -> x
map(function(x){
fi <- readLines(x)
second <- str_starts(fi, "##\\s")
fi[second]
})
list.files("01_Making_Maps", ".Rmd",full.names = TRUE) %>%
# head(1) -> x
map(function(x){
fi <- readLines(x)
second <- str_starts(fi, "##\\s")
fi[second]
}) %>%
unlist()
