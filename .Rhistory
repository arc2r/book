geom_stars(data = st_as_stars(meuse_idw)) +
scale_fill_viridis_c() +
theme_void() +
labs(fill = "copper")
meuse_idw <- my_idw(meuse_sf,"copper",cellsize = 10,idp = 3)
ggplot() +
geom_stars(data = st_as_stars(meuse_idw)) +
scale_fill_viridis_c() +
theme_void() +
labs(fill = "copper")
meuse_krige <- my_krige(meuse_sf,"copper",cellsize = 10,idp = 3)
my_krige <- function(groundtruth,column,cellsize, nmax = Inf, maxdist = Inf, idp = 2, extent = NULL){
require(gstat)
require(sf)
require(raster)
if(is.null(extent)){
extent <- groundtruth
}
samples <- st_make_grid(extent,cellsize,what = "centers") %>% st_as_sf()
my_formula <- formula(paste(column,"~1"))
idw_sf <- gstat::krige(formula = my_formula,groundtruth,newdata = samples,nmin = 1, maxdist = maxdist, idp = idp)
idw_matrix <- cbind(st_coordinates(idw_sf),idw_sf$var1.pred)
ras <- raster::rasterFromXYZ(idw_matrix)
if(all(grepl("polygon",st_geometry_type(extent),ignore.case = TRUE))){
ras <- raster::mask(ras,st_as_sf(st_zm(extent)))
}
ras
}
meuse_krige <- my_krige(meuse_sf,"copper",cellsize = 10,idp = 3)
my_krige <- function(groundtruth,column,cellsize, nmax = Inf, maxdist = Inf, extent = NULL){
require(gstat)
require(sf)
require(raster)
if(is.null(extent)){
extent <- groundtruth
}
samples <- st_make_grid(extent,cellsize,what = "centers") %>% st_as_sf()
my_formula <- formula(paste(column,"~1"))
idw_sf <- gstat::krige(formula = my_formula,groundtruth,newdata = samples,nmin = 1, maxdist = maxdist)
idw_matrix <- cbind(st_coordinates(idw_sf),idw_sf$var1.pred)
ras <- raster::rasterFromXYZ(idw_matrix)
if(all(grepl("polygon",st_geometry_type(extent),ignore.case = TRUE))){
ras <- raster::mask(ras,st_as_sf(st_zm(extent)))
}
ras
}
meuse_krige <- my_krige(meuse_sf,"copper",cellsize = 10,idp = 3)
meuse_krige <- my_krige(meuse_sf,"copper",cellsize = 10)
ggplot() +
geom_stars(data = st_as_stars(meuse_krige)) +
scale_fill_viridis_c() +
theme_void() +
labs(fill = "copper")
meuse_krige <- my_krige(meuse_sf,"copper",cellsize = 10,maxdist = 500)
ggplot() +
geom_stars(data = st_as_stars(meuse_krige)) +
scale_fill_viridis_c() +
theme_void() +
labs(fill = "copper")
ggplot() +
geom_stars(data = st_as_stars(meuse_krige), fill.na = NA) +
scale_fill_viridis_c() +
theme_void() +
labs(fill = "copper")
ggplot() +
geom_stars(data = st_as_stars(meuse_krige), na.fill = NA) +
scale_fill_viridis_c() +
theme_void() +
labs(fill = "copper")
ggplot() +
geom_stars(data = st_as_stars(meuse_krige)) +
scale_fill_viridis_c(na.value = NA) +
theme_void() +
labs(fill = "copper")
meuse_krige <- my_krige(meuse_sf,"copper",cellsize = 10,nmax = 30, maxdist = 500)
meuse_thissen <- st_voronoi(st_union(meuse_sf))
meuse_thissen <- st_cast(meuse_thissen)
meuse_thissen
meuse_thiessen <- st_voronoi(st_union(meuse_sf))
meuse_thiessen <- st_cast(meuse_thissen)
ggplot() +
geom_sf(data = nc) +
geom_sf(data = meuse_thiessen, fill = NA)
ggplot() +
geom_sf(data = meuse_thiessen, fill = NA)
st_bbox(meuse_thiessen)
meuse_sf %>%
st_bbox() %>%
st_sfc()
meuse_sf %>%
st_bbox() %>%
st_as_sfc()
meuse_bbox <- meuse_sf %>%
st_bbox() %>%
st_as_sfc()
thiessen <- st_intersection(thiessen,meuse_bbox)
ggplot() +
geom_sf(data = meuse_thiessen, fill = NA) +
theme_void()
thiessen
meuse_thiessen <- st_intersection(meuse_thiessen,meuse_bbox)
ggplot() +
geom_sf(data = meuse_thiessen, fill = NA) +
theme_void()
meuse_thiessen <- st_join(meuse_thiessen,meuse_sf)
ggplot() +
geom_sf(data = meuse_thiessen, aes(fill = val)) +
scale_fill_viridis_c() +
theme_void()
meuse_thiessen
meuse_sf
meuse_thiessen
meuse_thiessen <- st_as_sf(meuse_thiessen)
meuse_thiessen
meuse_thiessen <- st_join(meuse_thiessen,meuse_sf)
meuse_thiessen
ggplot() +
geom_sf(data = meuse_thiessen, aes(fill = copper)) +
scale_fill_viridis_c() +
theme_void()
ggplot() +
geom_sf(data = meuse_thiessen, aes(fill = copper)) +
geom_sf(data = meuse_sf) +
scale_fill_viridis_c() +
theme_void()
meuse_thiessen <- st_voronoi(st_union(meuse_sf))
meuse_thiessen
library(sf)
library(tidyvers)
library(tidyverse)
st_read(system.file("shape/nc.shp", package = "sf"),quiet = TRUE)
nc <- st_read(system.file("shape/nc.shp", package = "sf"),quiet = TRUE)
plot(nc)
plot(st_geometry(nc))
library(tmap)
tmap_mode("view")
# Set the mode to "view", to make interactive maps.
# Mode "pl
tmap_mode("plot")
library(sf)
library(tidyverse)
library(tmap)
nc <- st_read(system.file("shape/nc.shp", package = "sf"),quiet = TRUE)
tmap_mode("view")
tm_shape(nc) +
tm_polygons()
print(nc)
# Chunk 1
library(sf)
library(tidyverse)
eire <- read_sf(system.file("shapes/eire.shp", package="spData"))
# Chunk 2
st_crs(eire)
ggplot(eire) +
geom_sf()
# Chunk 3
eire <- st_set_crs(eire, "+proj=utm +zone=30 +ellps=airy +units=km")
ggplot(eire) +
geom_sf()
# Chunk 4
ggplot(eire) +
geom_sf(aes(fill = INCOME))
# Chunk 5
ggplot(eire) +
geom_sf(aes(fill = log(INCOME)), colour = "grey") +
labs(title = "Counties of the Irish Republic",
subtitle = expression("Distribution of Income (log"[10]*")"),
fill = "") +
scale_fill_viridis_c() +
theme_void() +
theme(legend.position = "bottom")
# Chunk 6
path <-"sample_data/SMR_10_Musterdaten/SMR_10KREL_508dpi_uncompressed/SMR10_LV95_KREL_Mosaic.tif"
bgmap <- raster(path)
bgmap
nbands(bgmap)
library(raster)
path <-"sample_data/SMR_10_Musterdaten/SMR_10KREL_508dpi_uncompressed/SMR10_LV95_KREL_Mosaic.tif"
bgmap <- raster(path)
bgmap
nbands(bgmap)
bgmap <- brick(path)
path <-"../sample_data/SMR_10_Musterdaten/SMR_10KREL_254dpi_LZW/SMR10_LV95_KREL_10L_Mosaic.tif"
bgmap <- raster(path)
path <-"sample_data/SMR_10_Musterdaten/SMR_10KREL_254dpi_LZW/SMR10_LV95_KREL_10L_Mosaic.tif"
bgmap <- raster(path)
bgmap
nbands(bgmap)
bgmap <- brick(path)
bgmap
ggplot() +
geom_stars(data = st_as_stars(bgmap))
library(stars)
ggplot() +
geom_stars(data = st_as_stars(bgmap))
# Chunk 1
library(sf)
library(tidyverse)
eire <- read_sf(system.file("shapes/eire.shp", package="spData"))
# Chunk 2
st_crs(eire)
ggplot(eire) +
geom_sf()
# Chunk 3
eire <- st_set_crs(eire, "+proj=utm +zone=30 +ellps=airy +units=km")
ggplot(eire) +
geom_sf()
# Chunk 4
ggplot(eire) +
geom_sf(aes(fill = INCOME))
# Chunk 5
ggplot(eire) +
geom_sf(aes(fill = log(INCOME)), colour = "grey") +
labs(title = "Counties of the Irish Republic",
subtitle = expression("Distribution of Income (log"[10]*")"),
fill = "") +
scale_fill_viridis_c() +
theme_void() +
theme(legend.position = "bottom")
# Chunk 6
library(raster)
path <-"sample_data/SMR_10_Musterdaten/SMR_10KREL_254dpi_LZW/SMR10_LV95_KREL_10L_Mosaic.tif"
bgmap <- raster(path)
bgmap
nbands(bgmap)
bgmap <- brick(path)
ggplot() +
geom_tile(bgmap)
ggplot() +
geom_tile(data = bgmap)
bgmap
bgmap
rgdal::SGDF2PCT(bgmap)
as(bgmap, "SpatialGridDataFrame")
bgmap <- as(bgmap, "SpatialGridDataFrame")
bgmap2 <- rgdal::SGDF2PCT(bgmap)
bgmap2
ggplot() +
geom_tile(data = bgmap2)
r <- setValues(raster::raster(bgmap2), pct$idx-1)
pct <- rgdal::SGDF2PCT(as(bgmap, "SpatialGridDataFrame"))
r <- setValues(raster::raster(bgmap), pct$idx-1)
colortable(r) <- pct$ct
r
ggplot() +
geom_tile(data = r)
r
colortable(r)
library(rasterVis)
gplot(r) +
geom_tile(aes(fill = vaue))
gplot(r) +
geom_tile(aes(fill = vaule))
r
gplot(r) +
geom_tile(aes(fill = values))
r
st_as_stars(bgmap)
df <- st_as_stars(bgmap)
plot(df)
ggplot() + geom_stars(data = df)
library(tmap)
tm_shape(bgmap) + tm_raster()
tm_shape(bgmap) + tm_rgb()
bgmap <- brick(path)
path <-"sample_data/SMR10_LV95_KREL_10L_Mosaic.tif"
bgmap <- raster(path)
path <-"sample_data/SMR_10_Musterdaten/SMR10_LV95_KREL_10L_Mosaic.tif"
bgmap <- raster(path)
bgmap
nbands(bgmap)
bgmap <- brick(path)
bgmap <- brick(path)
tm_shape(bgmap) + tm_rgb()
path
bgmap
unlist(bgmap)
unlist(bgmap)
getValues(bgmap)
rgb(1,2,3)
rgb(1,2,3,maxColorValue = 3)
rgb(1,2,3,maxColorValue = 255)
plot(rgb(1,2,3,maxColorValue = 255))
scales::show_col(rgb(1,2,3,maxColorValue = 255))
scales::show_col(rgb(100,2,3,maxColorValue = 255))
scales::show_col(rgb(100,2,255,maxColorValue = 255))
sampleRegular(bgmap,500000)
as.data.frame(bgmap)
as.data.frame(bgmap[[1]])
as.data.frame(coordinates(bgmap[[1]]))
coordinates(bgmap)
bgmap[,1]
bgmap[1,]
bgmap[[1]]
bgmap[[1]][,1]
as.data.frame(coordinates(bgmap),fill = rgb(bgmap[[1]][,1],bgmap[[1]][,2],bgmap[[1]][,3]))
rgb(bgmap[[1]][,1],bgmap[[1]][,2],bgmap[[1]][,3])
rgb(bgmap[[1]][,1],bgmap[[1]][,2],bgmap[[1]][,3],maxColorValue = 255)
df <- as.data.frame(coordinates(bgmap),fill = rgb(bgmap[[1]][,1],bgmap[[1]][,2],bgmap[[1]][,3],maxColorValue = 255))
df
z <- rgb(bgmap[[1]][,1],bgmap[[1]][,2],bgmap[[1]][,3],maxColorValue = 255)
z
coordinates(bgmap)
as.data.frame(coordinates(bgmap))
as.data.frame(coordinates(bgmap),fill = z)
df <- as.data.frame(coordinates(bgmap)) %>%
mutate(fill = z)
z
as.data.frame(coordinates(bgmap))
coordinates(bgmap)
df <- data.frame(coordinates(bgmap),fill = z)
df
ggplot() + geom_tile(df) + scale_fill_identity()
ggplot() + geom_tile(df, aes(fill)) + scale_fill_identity()
ggplot() + geom_tile(data = df, aes(fill)) + scale_fill_identity()
ggplot() + geom_tile(data = df, aes(x,y,fill)) + scale_fill_identity()
ggplot() + geom_tile(data = df, aes(x,y,fill = fill)) + scale_fill_identity()
coordinates(bgmap)
bgmap[[1]]
bgmap <- brick(path)
bgmap[[1]]
bgmap[[1]][,1]
bgmap[[2]]
bgmap[[2]][,1]
bgmap[[3]][,1]
z <- rgb(bgmap[[1]][,1],bgmap[[2]][,1],bgmap[[3]][,1],maxColorValue = 255)
df <- data.frame(coordinates(bgmap),fill = z)
ggplot() + geom_tile(data = head(df), aes(x,y,fill = fill)) + scale_fill_identity()
ggplot() + geom_tile(data = head(df,100), aes(x,y,fill = fill)) + scale_fill_identity()
ggplot() + geom_tile(data = head(df,1000), aes(x,y,fill = fill)) + scale_fill_identity()
ggplot() + geom_tile(data = head(df,10000), aes(x,y,fill = fill)) + scale_fill_identity()
ggplot() + geom_tile(data = head(df,100000), aes(x,y,fill = fill)) + scale_fill_identity()
nrow(df)
ggplot() + geom_tile(data = head(df,1000000), aes(x,y,fill = fill)) + scale_fill_identity()
bgmap[[1]]
bgmap[[1]][,1]
bgmap[[2]][,1]
bgmap[[3]][,1]
bgmap[[3]][1]
df
nrow(df)
length(z)
coordinates(bgmap)
coordinates(bgmap)
df <- data.frame(coordinates(bgmap)[1:100],fill = z[1:100])
ggplot() + geom_tile(data = head(df,1000000), aes(x,y,fill = fill)) + scale_fill_identity()
df
df <- data.frame(coordinates(bgmap)[1:100,],fill = z[1:100])
ggplot() + geom_tile(data = head(df,1000000), aes(x,y,fill = fill)) + scale_fill_identity()
df <- data.frame(coordinates(bgmap)[1:1000,],fill = z[1:1000])
ggplot() + geom_tile(data = head(df,1000000), aes(x,y,fill = fill)) + scale_fill_identity()
z
z
bgmap[1]
bgmap[[1]]
bgmap[[1]]$SMR10_LV95_KREL_10L_Mosaic.1
bgmap[[1]][,1]
nrow(bgmap[[1]][,1])
length(bgmap[[1]][,1])
dims(coordinates(bgmap))
dim(coordinates(bgmap))
head(bgmap[[1]][,1])
head(bgmap[[1]][,2])
bgmap[[1]]
values(bgmap[[1]])
z <- rgb(values(bgmap[[1]]),bgmap[[2]],bgmap[[3]],maxColorValue = 255)
z <- rgb(values(bgmap[[1]]),values(bgmap[[2]]),values(bgmap[[3]]),maxColorValue = 255)
df <- data.frame(coordinates(bgmap),fill = z)
ggplot() + geom_tile(data = head(df,100), aes(x,y,fill = fill)) + scale_fill_identity()
ggplot() + geom_tile(data = head(df,1000), aes(x,y,fill = fill)) + scale_fill_identity()
ggplot() + geom_tile(data = head(df,10000), aes(x,y,fill = fill)) + scale_fill_identity()
ggplot() + geom_tile(data = head(df,50000), aes(x,y,fill = fill)) + scale_fill_identity()
ggplot() + geom_tile(data = df, aes(x,y,fill = fill)) + scale_fill_identity()
raster::sampleRegular(bgmap,10000)
bgmap_resample <- raster::sampleRegular(bgmap,10000)
bgmap <- raster::sampleRegular(bgmap,10000)
z <- rgb(values(bgmap[[1]]),values(bgmap[[2]]),values(bgmap[[3]]),maxColorValue = 255)
bgmap
bgmap[,1]
values(bgmap)
bgmap
bgmap <- brick(path)
??raster::aggregate
raster::aggregate(bgmap, fact = 10)
bgmap <- raster::aggregate(bgmap, fact = 10)
z <- rgb(values(bgmap[[1]]),values(bgmap[[2]]),values(bgmap[[3]]),maxColorValue = 255)
df <- data.frame(coordinates(bgmap),fill = z)
ggplot() +
geom_tile(data = df, aes(x,y,fill = fill)) +
scale_fill_identity() +
coord_equal()
bgmap <- raster::aggregate(bgmap, fact = 5)
z <- rgb(values(bgmap[[1]]),values(bgmap[[2]]),values(bgmap[[3]]),maxColorValue = 255)
df <- data.frame(coordinates(bgmap),fill = z)
ggplot() +
geom_tile(data = df, aes(x,y,fill = fill)) +
scale_fill_identity() +
coord_equal()
bgmap <- brick(path)
bgmap <- raster::aggregate(bgmap, fact = 5)
z <- rgb(values(bgmap[[1]]),values(bgmap[[2]]),values(bgmap[[3]]),maxColorValue = 255)
df <- data.frame(coordinates(bgmap),fill = z)
ggplot() +
geom_tile(data = df, aes(x,y,fill = fill)) +
scale_fill_identity() +
coord_equal()
path <- "sample_data/SMR_10_Musterdaten/SMR50_LV95_KOMB_Mosaic.tif"
bgmap <- raster(path)
bgmap
colortable(bgmap)
path_1b <- "sample_data/SMR_10_Musterdaten/SMR50_LV95_KOMB_Mosaic.tif"
path_3b <-"sample_data/SMR_10_Musterdaten/SMR10_LV95_KREL_10L_Mosaic.tif"
path_1b <- "sample_data/SMR_Musterdaten/SMR50_LV95_KOMB_Mosaic.tif"
path_3b <- "sample_data/SMR_Musterdaten/SMR50_LV95_KREL_10L_Mosaic.tif"
raster(path_1b)
raster(path_3b)
colortable(map_1b)
map_1b <- raster(path_1b)
map_3b <- brick(path_3b)
colortable(map_1b)
scales::show_col(coltab)
coltab <- colortable(map_1b)
coltab
scales::show_col(coltab)
scales::show_col(coltab,labels = FALSE)
map.df <- data.frame(rasterToPoints(map_1b))
rasterToPoints(map_1b)
names(coltab) <- 0:(length(coltab) - 1)
coltab
ggplot() +
geom_tile(map.df)
ggplot() +
geom_tile(data = map.df)
ggplot() +
geom_tile(data = map.df, aes(x,y))
map.df
nrow(map.df)
aggregate(map_1b,frac = 5)
map_1b <- aggregate(map_1b,frac = 5)
coltab <- colortable(map_1b)
coltab
scales::show_col(coltab,labels = FALSE)
coltab
map_1b
map_1b
map_1b <- raster(path_1b)
colortable(map_1b)
map_1b <- aggregate(map_1b,frac = 5)
coltab
map_1b <- raster(path_1b)
coltab <- colortable(map_1b)
map_1b <- aggregate(map_1b,frac = 5)
map_1b
coltab
scales::show_col(coltab,labels = FALSE)
map.df <- data.frame(rasterToPoints(map_1b))
names(coltab) <- 0:(length(coltab) - 1)
ggplot() +
geom_tile(data = map.df, aes(x,y))
coltab
map.df
ggplot() +
geom_tile(data = map.df, aes(x,y, fill = SMR50_LV95_KOMB_Mosaic)) +
scale_fill_manual(coltab)
coltab
coordinates(map_1b)
map_1b
getValues(map_1b)
map.df <- data.frame(coordinates(map_1b),fill = getValues(map_1b))
ggplot() +
geom_tile(data = map.df, aes(x,y, fill = fill)) +
scale_fill_identity()
map_1b <- raster(path_1b)
map.df <- data.frame(coordinates(map_1b),fill = getValues(map_1b))
coltab <- colortable(map_1b)
# map_1b <- aggregate(map_1b,frac = 5)
coltab
scales::show_col(coltab,labels = FALSE)
map.df <- data.frame(coordinates(map_1b),fill = getValues(map_1b))
names(coltab) <- 0:(length(coltab) - 1)
ggplot() +
geom_tile(data = map.df, aes(x,y, fill = fill)) +
scale_fill_identity()
names(coltab)
getValues(map_1b)
coltab
getValues(map_1b)[coltab]
getValues(map_1b)
coltab
ggplot() +
geom_tile(data = map.df, aes(x,y, fill = fill)) +
scale_fill_manual(values = coltab)
coltab
map.df
str(map.df)
min(map.df)
min(map.df$fill)
min(coltab)
map.df
getValues(map_1b)
coltab[getValues(map_1b)]
map.df <- data.frame(coordinates(map_1b),fill = coltab(getValues(map_1b)))
map.df <- data.frame(coordinates(map_1b),fill = coltab[getValues(map_1b)])
ggplot() +
geom_tile(data = map.df, aes(x,y, fill = fill)) +
scale_fill_identity()
coltab <- colortable(map_1b)
coltab
map.df <- data.frame(coordinates(map_1b),fill = coltab[getValues(map_1b)])
ggplot() +
geom_tile(data = map.df, aes(x,y, fill = fill)) +
scale_fill_identity()
