library(tidyverse)
eire <- read_sf("sample_data/spData/eire.shp")
# Chunk 2
st_crs(eire)
ggplot(eire) +
geom_sf()
# Chunk 3
eire <- st_set_crs(eire, "+proj=utm +zone=30 +ellps=airy +units=km")
ggplot(eire) +
geom_sf()
# Chunk 4
ggplot(eire) +
geom_sf(aes(fill = INCOME))
# Chunk 5
ggplot(eire) +
geom_sf(aes(fill = log(INCOME)), colour = "grey") +
labs(title = "Counties of the Irish Republic",
subtitle = expression("Distribution of Income (log"[10]*")"),
fill = "") +
scale_fill_viridis_c() +
theme_void() +
theme(legend.position = "bottom")
# Chunk 6
library(raster)
path_1b <- "sample_data/SMR_Musterdaten/SMR50_LV95_KOMB_Mosaic.tif"
path_3b <- "sample_data/SMR_Musterdaten/SMR50_LV95_KREL_10L_Mosaic.tif"
raster(path_1b)
raster(path_3b)
# Chunk 7
map_1b <- raster(path_1b)
map_3b <- brick(path_3b)
# Chunk 8
str(map_1b)
head(getValues(map_1b),50)
extent(map_1b)
# Chunk 9
coltab <- colortable(map_1b)
head(coltab)
scales::show_col(coltab,labels = FALSE)
# Chunk 10
map_1b_df <- data.frame(coordinates(map_1b),values = getValues(map_1b))
head(map_1b_df)
# Chunk 11
names(coltab) <- 0:255 # 1:256 would be wrong by 1
ggplot() +
geom_raster(data = map_1b_df, aes(x,y, fill = factor(values))) +
scale_fill_manual(values = coltab) +
theme(legend.position = "none") +
coord_equal()
# Chunk 13
map_3b
map_3b[[1]]
# Chunk 14
head(values(map_3b[[1]]),50)
# Chunk 15
rgb(10,10,10,maxColorValue = 255)
cols <- rgb(values(map_3b[[1]]),values(map_3b[[2]]),values(map_3b[[3]]),maxColorValue = 255)
head(cols,50)
# Chunk 16
map_3b_df <- data.frame(coordinates(map_3b),colorvalue = cols)
head(map_3b_df)
# Chunk 17
ggplot() +
geom_raster(data = map_3b_df, aes(x,y,fill = colorvalue)) +
scale_fill_identity() +
coord_equal()
# Chunk 18
map_3b_lowres <- raster::aggregate(map_3b, fact = 5)
map_3b_lowres_df <- data.frame(coordinates(map_3b_lowres),colorvalue = rgb(values(map_3b_lowres[[1]]),values(map_3b_lowres[[2]]),values(map_3b_lowres[[3]]),maxColorValue = 255))
ggplot() +
geom_raster(data = map_3b_lowres_df, aes(x,y,fill = colorvalue)) +
scale_fill_identity() +
coord_equal()
# Chunk 19
map_grey_path <- "sample_data/SMR_Musterdaten/SMR50_LV95_KGRS_Mosaic.tif"
map_grey <- raster(map_grey_path)
head(getValues(map_grey))
colortable(map_grey)
library(tiff)
readTIFF(path_1b)
readTIFF(path_1b,indexed = TRUE) -> index
colormap <- attr(index,"color.map")
colormap
coltab <- rgb(colormap[1,],colormap[2,],colormap[3,])
scales::show_col(coltab,labels = FALSE)
path <- path_1b
require(tiff)
readTIFF(path)
raster_indexed <- readTIFF(path,indexed = TRUE)
raster_indexed
attr(raster_indexed,"color.map)
}
```
attr(raster_indexed,"color.map")
attr(raster_indexed,"color.map")
raster_colormap <- attr(raster_indexed,"color.map")
path <- path_3b
raster_indexed <- readTIFF(path,indexed = TRUE)
raster_indexed
raster_colormap <- attr(raster_indexed,"color.map")
raster_colormap
path
raster_indexed
raster(path)
nbands(raster(path))
raster_file <- raster::raster(path)
path <- path_1b
brick(path)
raster_file <- raster::brick(path)
data.frame(coordinates(raster_file))
raster_df < -data.frame(coordinates(raster_file), values = getValues(raster_file))
raster_df <- data.frame(coordinates(raster_file), values = getValues(raster_file))
raster_df
raster_colormap
raster_colormap <- attr(raster_indexed,"color.map")
raster_indexed <- readTIFF(path,indexed = TRUE)
raster_colormap <- attr(raster_indexed,"color.map")
raster_colormap
raster_colormap_hex <- rgb(raster_colormap[1,],raster_colormap[2,],raster_colormap[3,])
raster_colormap_hex
scales::show_col(raster_colormap_hex)
raster_df <- data.frame(coordinates(raster_file), values = raster_colormap_hex[getValues(raster_file)+1])
raster_df
nbands(raster_file)
raster_file <- raster::brick(path)
bands_n <- nbands(raster_file)
bands_n
raster_indexed <- readTIFF(path,indexed = TRUE)
raster_colormap <- attr(raster_indexed,"color.map")
raster_colormap_hex <- rgb(raster_colormap[1,],raster_colormap[2,],raster_colormap[3,])
raster_df <- data.frame(coordinates(raster_file), values = raster_colormap_hex[getValues(raster_file)+1])
raster_df
ggplot(raster_df, aes(fill = values)) + geom_raster()
ggplot(raster_df, aes(x,y,fill = values)) + geom_raster()
ggplot(raster_df, aes(x,y,fill = values)) + geom_raster() + scale_fill_identity()
path <- path_3b
raster_file <- raster::brick(path)
bands_n <- nbands(raster_file)
bands_n
raster_df <- data.frame(
coordinates(raster_file),
values = rgb(values(raster_file[[1]]),values(raster_file[[2]]),values(raster_file[[3]]),maxColorValue = 255)
)
raster_df
map_3b_df
map_3b_df <- data.frame(coordinates(map_3b),colorvalue = cols,r = values(map_3b[[1]]), b = values(map_3b[[2]]),g = values(map_3b[[3]]))
map_3b_df
ggplot() +
geom_raster(data = map_3b_df, aes(x,y,fill = rgb(r,b,g))) +
scale_fill_identity() +
coord_equal()
ggplot() +
geom_raster(data = map_3b_df, aes(x,y,fill = rgb(r,b,g,maxColorValue = 255))) +
scale_fill_identity() +
coord_equal()
ggplot() +
geom_raster(data = map_3b_df, aes(x,y,fill = rgb(r,b,g,maxColorValue = 255))) +
coord_equal()
ggplot() +
geom_raster(data = map_3b_df, aes(x,y,fill = rgb(r,g,b,maxColorValue = 255))) +
scale_fill_identity() +
coord_equal()
map_3b_df <- data.frame(
coordinates(map_3b),
r = values(map_3b[[1]]),
g = values(map_3b[[2]]),
b = values(map_3b[[3]]))
ggplot() +
geom_raster(data = map_3b_df, aes(x,y,fill = rgb(r,g,b,maxColorValue = 255))) +
scale_fill_identity() +
coord_equal()
ggplot() +
geom_raster(data = head(map_3b_df,100), aes(x,y,fill = rgb(r,g,b,maxColorValue = 255))) +
scale_fill_identity() +
coord_equal()
ggplot() +
geom_raster(data = head(map_3b_df,1000), aes(x,y,fill = rgb(r,g,b,maxColorValue = 255))) +
scale_fill_identity() +
coord_equal()
ggplot() +
geom_raster(data = head(map_3b_df,10000), aes(x,y,fill = rgb(r,g,b,maxColorValue = 255))) +
scale_fill_identity() +
coord_equal()
ggplot() +
geom_raster(data = head(map_3b_df,10000), aes(x,y,fill = rgb(r,g,b,maxColorValue = 255))) +
# scale_fill_identity() +
coord_equal()
git add "sample_data/other/2692_1232.tif"
getwd()
tt <- st_read("sample_data/Kanton_Zuerich/Veloparkierungsanlagen/OGD_VELOPARKIERANLAGEN_P.shp")
library(sf)
tt <- st_read("sample_data/Kanton_Zuerich/Veloparkierungsanlagen/OGD_VELOPARKIERANLAGEN_P.shp")
tt
library(dplyr)
select(tt,GEMEINDE)
library(tidyverse)
select(tt,tt$PLANUNGSRE)
select(tt,tt$PLANUNGSRE)
library(tidyverse)
library(dplyr)
select(tt,tt$PLANUNGSRE)
select(tt, GEMEINDE)
select(tt, GEMEINDE == "Winterthur")
select(tt, tt$GEMEINDE == "Winterthur")
knitr::opts_chunk$set(warning = F, message = F, tidy = T)
library(sf)
library(ggplot2)
parkBikes <- st_read("sample_data/Kanton_Zuerich/Veloparkierungsanlagen/OGD_VELOPARKIERANLAGEN_P.shp")
library(dplyr)
parkBikes_winti <- filter(parkBikes,GEMEINDE == "Winterthur")
ggplot(parkBikes) + geom_sf()
ggplot(parkBikes_winti) + geom_sf()
ggplot(parkBikes) + geom_point()
ggplot(parkBikes) + geom_sf(aes(color = (parkBikes$GEMEINDE=="Winterthur"))
ggplot(parkBikes) + geom_sf(aes(color = (parkBikes$GEMEINDE=="Winterthur")))
ggplot(parkBikes) + geom_sf(aes(color = parkBikes_winti))
ggplot(parkBikes) + geom_sf(aes(color = (GEMEINDE=="Winterthur")))
ggplot(parkBikes) + geom_sf()
tt <- tt %>% group_by(GEMEINDE) %>% summarise()
View(tt)
ggplot(tt) + geom_sf()
View(tt)
st_convex_hull(tt)
plot(st_convex_hull(tt))
tt
View(tt)
ggplot(tt) + geom_sf()
ggplot(tt) + geom_sf(tt$GEMEINDE=="Winterthur")
ggplot(tt) + geom_sf(aes(tt$GEMEINDE=="Winterthur"))
tt
View(tt)
ggplot(tt) + geom_sf(aes(colour = GEMEINDE))
ggplot(tt) + geom_sf()
View(tt)
syn <- st_convex_hull(tt$GEMEINDE=="Winterthur")
syn <- st_convex_hull((tt$GEMEINDE=="Winterthur"))
win <- st_convex_hull(tt$GEMEINDE=="Winterthur")
mine <- filter(tt,GEMEINDE == "Winterthur")
ggplot() + geom_sf(data =  parkBikes) + geom_sf(data = mine)
ggplot() + geom_sf(data = mine)
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = parkBikes_winti, aes(colour = "red"))
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = parkBikes_winti, aes(colour = "winterthur"))
ggplot() + geom_sf(data = parkBikes) + geom_sf((data = parkBikes_winti), aes(colour = "red"))
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = mine, aes(color = "Gemeinde Winterthur"))
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = mine, aes(color = "Gemeinde Winterthur")) + theme(legend.title=element_blank())
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = mine, aes(color = "Bicycles Parking spots in Winterthur")) + theme(legend.title=element_blank())
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = mine, aes(color = "Bicycles Parking spots in Winterthur")) + theme(legend.title=element_blank()) + title("Bicycle parking spots in the Canton of Zurich")
ggplot() + geom_sf(parkBikes) + geom_sf(parkBikes_winti, aes(fill = "red"))
ggplot() + geom_sf(parkBikes) + geom_sf(parkBikes_winti,aes(fill = "red"))
ggplot() + geom_sf(parkBikes) + geom_sf(parkBikes_winti,aes(colour = "red"))
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = parkBikes_winti,aes(fill = "red"))
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = parkBikes_winti,aes(colour = "red"))
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = mine, aes(color = "Bicycles Parking spots in Winterthur")) + theme(legend.title=element_blank()) + title("Bicycle parking spots in the Canton of Zurich")
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = mine, aes(color = "Bicycles Parking spots in Winterthur")) + theme(legend.title=element_blank())
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = parkBikes_winti, aes(color = "Bicycles Parking spots in Winterthur")) + theme(legend.title=element_blank())
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = parkBikes_winti, aes(color = "Bicycles Parking spots in Winterthur")) + theme(legend.title=element_blank())
ggplot() + geom_sf(data = parkBikes) + geom_sf(data = parkBikes_winti, aes(color = "Bicycles Parking spots in Winterthur")) + theme(legend.title=element_blank()) + ggtitle("PP")
getwd()
tt <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
library(sf)
tt <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
library(ggplot2)
ggplot() + geom_sf(tt)
ggplot() + geom_sf(data = tt)
View(tt)
tt
bb <- st_read("sample_data/Kanton_Zuerich/Veloparkierungsanlagen/OGD_VELOPARKIERANLAGEN_P.shp")
tt
bb
bb[tt,,op=st_distance(500)]
bb[tt,,op=st_distance(dist_fun = 500)]
ss <- st_distance(bb,tt,dist_fun = 550)
ss <- st_distance(bb,tt,lwgeom = 500)
View(tt)
tt
bb[tt,]
aa <- bb[tt,,op = st_intersects]
aa <- bb[tt,,op = st_within]
aa <- bb[tt,,op = st_is_within_distance]
aa <- bb[tt,,op = st_is_within_distance(dist = 500)]
aa <- bb[tt,,op = st_disjoint]
?st_is_within_distance
aa <- bb[tt,,op = st_is_within_distance(dist = 1000,sparse = T)]
aa <- bb[tt,,op = st_is_within_distance(.,, dist = 1000,sparse = T)]
pp[tt,,op=st_intersects]
bb[tt,,op=st_intersects]
bb[tt,,op=st_disjoint]
bb[tt,,op=st_disjoint()]
bb[tt,,op=st_is_within_distance]
bb[tt,,op=st_is_within_distance(dist = 1000)]
bb[tt,,op=st_is_within_distance]
bb[tt,,op=st_contains]
gemeinde <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
ggplot() + geom_sf(data = gemeinde)
ggplot() + geom_sf(data = gemeinde) + geom_sf(data = (gemeinde$bezirksnam=="Horgen"),fill="red")
ggplot() + geom_sf(data = gemeinde) + geom_sf(data = (filter(gemeinde$bezirksnam=="Horgen"),fill="red"))
horgen <- filter(gemeinde,gemeinde$bezirksnam=="Horgen")
names(gemeinde)
filter(gemeinde,bezirksnam == "Winterthur")
class(gemeinde)
filter(gemeinde,gemeinde$bezirksnam == "Winterthur")
filter(gemeinde,gemeinde$bezirksnam == Winterthur)
View(gemeinde)
gemeinde
View(gemeinde)
filter(gemeinde, gemeinde$bezirksnam == "Meilen")
class(gemeinde$bezirksnam)
filter(gemeinde, as.character(gemeinde$bezirksnam) == "Meilen")
gemeinde <- unlist(gemeinde)
filter(gemeinde, gemeinde$bezirksnam == "Meilen")
gemeinde <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
gemeinde$bezirksnam
gemeinde$bezirksnam == "Winterthur"
dplyr::filter(gemeinde, gemeinde$bezirksnam == "Horgen")
dplyr::filter(gemeinde, gemeindena == "Richterswil")
library(dplyr)
library(sf)
library(ggplot2)
getwd()
gemeinde_ZH <- st_read("../sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
library(sf)
gemeinde_ZH <- st_read("../sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# Selecting Richterswil municipality
richterswil <- select(gemeinde_ZH, gemeindena == "Richterswil")
richterswil <- filter(gemeinde_ZH, gemeindena == "Richterswil")
# Selecting Richterswil municipality
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = richterswil, fill = "white")
library(dplyr)
library(sf)
library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# Selecting Richterswil municipality
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = richterswil, fill = "white")
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots,fill = "red")
library(dplyr)
library(sf)
library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# Selecting Richterswil municipality
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
# Reading all the "swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots,fill = "red")
library(dplyr)
library(sf)
library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# Selecting Richterswil municipality
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
# Reading all the "swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots,fill = "green")
library(dplyr)
library(sf)
library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# Selecting Richterswil municipality
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
# Reading all the "swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots,color = "green")
library(dplyr)
library(sf)
library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# Selecting Richterswil municipality
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
# Reading all the "swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots,color = "blue")
library(dplyr)
library(sf)
library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# Selecting Richterswil municipality
#richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
# Reading all the "swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + ggtitle("Swimming spots in the Canton of Zurich")
library(dplyr)
library(sf)
library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# Selecting Richterswil municipality
#richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
# Reading all the "swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + ggtitle("Swimming spots in the Canton of Zurich")
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
richterswil
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil,aes(fill = gemeindena)) + ggtitle("Swimming spots in the Canton of Zurich")
names(richterswil)[3]
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# "Swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
# Municipality (Gemeinde) of Richterswil
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil") %>%
names(richterswil)[3] = "Municipality"
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# "Swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
# Municipality (Gemeinde) of Richterswil
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil") %>%
names(.)[3] = "Municipality"
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil") %>%
names(.)[3] = "Municipality"
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# "Swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
# Municipality (Gemeinde) of Richterswil
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
names(.)[3] = "Municipality"
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# "Swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
# Municipality (Gemeinde) of Richterswil
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
names(richterswil)[3] = "Municipality"
names(richterswil)[3]
library(dplyr)
library(sf)
library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# "Swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
# Municipality (Gemeinde) of Richterswil
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
names(richterswil)[3]
names(richterswil)[4]
names(richterswil)[5]
swimmSpots_richt <- swimmSpots[richterswil,,op = st_within]
View(swimmSpots_richt)
swimmSpots_richt
names(swimmSpots_richt)
swimmSpots_richt <- swimmSpots[richterswil, ,op = st_within]
knitr::opts_chunk$set(warning = F, message = F, tidy = T)
library(dplyr)
library(sf)
library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# "Swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
# Municipality (Gemeinde) of Richterswil
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
names(richterswil)[5] = "Municipality"
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil,aes(fill = Municipality)) + ggtitle("Swimming spots in the Canton of Zurich")
swimmSpots_richt <- swimmSpots[richterswil, ,op = st_within]
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots_richt, aes(color = "red")) + ggtitle("Swimming spots in the Canton of Zurich")
names(swimmSpots_richt)
swimmSpots_richt
ggplot(swimmSpots_richt) + geom_sf(color = "red")
ggplot(swimmSpots_richt) + geom_sf(aes(color = "red"))
ggplot(swimmSpots_richt) + geom_sf(aes(color = "rsd"))
ggplot(swimmSpots_richt) + geom_sf(aes(color = "Richterswil"))
ggplot(swimmSpots_richt) + geom_sf(aes(fill = "Richterswil"))
ggplot(swimmSpots_richt) + geom_sf(aes(fill = "Richterswil", color = "red"))
ggplot(swimmSpots_richt) + geom_sf(aes(fill = "Richterswil",color = "red"))
ggplot(swimmSpots_richt) + geom_sf(aes(fill = "Richterswil"))
ggplot(swimmSpots_richt) + geom_sf(aes(fill = "Richterswil"))
ggplot(swimmSpots_richt) + geom_sf(fill = "Richterswil")
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots_richt, aes(color = "Swimm spot in Richterswil")) + ggtitle("Swimming spots in the Canton of Zurich")
swimmSpots_richt
gemeinde_ZH
swimmSpots
names(swimmSpots_richt)
swimmSpots_richt
sw <- c("Swimming spot in Richterswil")
cbind(swimmSpots_richt,sw)
swimmSpots_richt
sw <- c("Swimming spot in Richterswil")
swimmSpots_richt <- cbind(swimmSpots_richt,sw)
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots_richt, color = "red") + ggtitle("Swimming spots in the Canton of Zurich") + theme_minimal()
sw <- c("Swimming spot in Richterswil")
swimmSpots_richt <- cbind(swimmSpots_richt,sw)
swimmSpots_richt
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots_richt, color = sw) + ggtitle("Swimming spots in the Canton of Zurich") + theme_minimal()
names(swimmSpots_richt)
drop(swimmSpots_richt,"sw.1")
drop(swimmSpots_richt,sw.1)
swimmSpots_richt[8]
drop(swimmSpots_richt[8])
swimmSpots_richt
knitr::opts_chunk$set(warning = F, message = F, tidy = T)
library(dplyr)
library(sf)
library(ggplot2)
# Minicipalities (Gemeinde) in Canton Zurich
gemeinde_ZH <- st_read("sample_data/Kanton_Zuerich/Gemeinde_ZH.shp")
# "Swimming" spots in the Canton of Zurich
swimmSpots <- st_read("sample_data/Kanton_Zuerich/Badeplaetze_ZH.shp")
# Municipality (Gemeinde) of Richterswil
richterswil <- dplyr::filter(gemeinde_ZH, gemeindena == "Richterswil")
names(richterswil)[5] = "Municipality"
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil,aes(fill = Municipality)) + ggtitle("Swimming spots in the Canton of Zurich") + theme_minimal()
swimmSpots_richt <- swimmSpots[richterswil, ,op = st_within]
ggplot() + geom_sf(data = gemeinde_ZH) + geom_sf(data = swimmSpots,color = "blue") + geom_sf(data = richterswil, fill = "white") + geom_sf(data = swimmSpots_richt, color = "red") + ggtitle("Swimming spots in the Canton of Zurich") + theme_minimal()
